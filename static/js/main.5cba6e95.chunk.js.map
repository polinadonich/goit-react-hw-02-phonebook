{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Phonebook.module.css","components/ContactElement/ContactElement.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactElement","id","name","number","deleteContact","className","s","button","type","onClick","prototype","PropTypes","string","isRequired","func","checkPropTypes","ContactList","contacts","console","log","list","map","item","ContactForm","state","handleChange","e","currentTarget","setState","value","handleSubmit","preventDefault","props","find","contact","alert","addContact","this","onSubmit","lableContact","inputContact","onChange","pattern","title","required","Component","defaultProps","arrayOf","shape","Filter","findLable","filter","App","uuidv4","prevState","changeFilter","getVisibleContact","normalizeTodo","toLowerCase","includes","todoId","visibleContact","container","phonebookContainer","contactsContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cba6e95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lableContact\":\"ContactForm_lableContact__JUEzR\",\"inputContact\":\"ContactForm_inputContact__15Dvi\",\"button\":\"ContactForm_button__2U4PV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__2SA80\",\"phonebookContainer\":\"Phonebook_phonebookContainer__231vl\",\"contactsContainer\":\"Phonebook_contactsContainer__1XIXI\",\"list\":\"Phonebook_list__3zWow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"ContactElement_number__3Rnnl\",\"button\":\"ContactElement_button__2DgrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__oyW4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findLable\":\"Filter_findLable__1zwq8\",\"find\":\"Filter_find__2zrag\"};","import s from \"./ContactElement.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactElement({ id, name, number, deleteContact }) {\n  return (\n    <p>\n      <span>{name}:</span>\n      <span className={s.number}>{number}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </p>\n  );\n}\n\nContactElement.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(ContactElement);\n\nexport default ContactElement;\n","import ContactElement from \"../ContactElement\";\nimport s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactList({ contacts, deleteContact }) {\n  console.log(contacts);\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <ContactElement\n            id={id}\n            name={name}\n            number={number}\n            deleteContact={deleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n\n  deleteContact: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(ContactList);\n\nexport default ContactList;\n","import { Component } from \"react\";\nimport s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.number.isRequired,\n      }).isRequired\n    ),\n    addContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    console.log(e.currentTarget.name);\n    if (e.currentTarget.name === \"name\") {\n      this.setState({\n        name: e.currentTarget.value,\n      });\n    }\n    if (e.currentTarget.name === \"number\") {\n      this.setState({\n        number: e.currentTarget.value,\n      });\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    console.log(this.props.contacts);\n\n    const isContactsIncludes = this.props.contacts.find(\n      (contact) => contact.name === name\n    );\n\n    if (isContactsIncludes) {\n      return alert(`${name}is alredy in contacts`);\n    } else {\n      this.props.addContact(name, number);\n\n      this.setState({ name: \"\", number: \"\" });\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={s.lableContact}>\n          Name\n          <input\n            className={s.inputContact}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={s.lableContact}>\n          Number\n          <input\n            className={s.inputContact}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\n// ContactForm.prototype = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.checkPropTypes(\n//       PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.number.isRequired,\n//       }).isRequired\n//     )\n//   ),\n//   addContact: PropTypes.func.isRequired,\n// };\n\n// PropTypes.checkPropTypes(ContactForm);\n","// import React from \"react\";\nimport s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.findLable}>\n      Find contacts by name\n      <input\n        className={s.find}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nFilter.prototype = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(Filter);\n\nexport default Filter;\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport contacts from \"./components/contacts.json\";\nimport ContactList from \"./components/ContactList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport s from \"./components/Phonebook.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    console.log(e.currentTarget.value);\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    console.log(contacts);\n    const normalizeTodo = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeTodo)\n    );\n  };\n\n  deleteContact = (todoId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== todoId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContact = this.getVisibleContact();\n    return (\n      <div className={s.container}>\n        <div className={s.phonebookContainer}>\n          <h1>Phonebook</h1>\n          <ContactForm\n            addContact={this.addContact}\n            contacts={this.state.contacts}\n          />\n        </div>\n\n        <div className={s.contactsContainer}>\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContact}\n            deleteContact={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}